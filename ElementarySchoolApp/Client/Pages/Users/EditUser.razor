@page "/users/edit/{userId}"
@inject IUserRepository repository
@inject IJSRuntime jsRuntime

<h3>Edit User</h3>

<div class="form-inline">
    <select class="form-control mb-2 mr-sm-2" @bind="selectedRole">
        <option value="0">--Select a role--</option>
        @foreach (var role in roles)
        {
            <option value="@role.RoleName">@role.RoleName</option>
        }
    </select>
    <AuthorizeView Roles="@StaticDetails.Role_Admin">
        <Authorized>
            <button class="btn btn-info mb-2 mr-sm-2" @onclick="AssignRole">Assign Role</button>
            <button class="btn btn-danger mb-2 mr-sm-2" @onclick="RemoveRole">Remove Role</button>
        </Authorized>
    </AuthorizeView>
    
</div>

@code {
    [Parameter] public string UserId { get; set; }
    private List<RoleDTO> roles = new List<RoleDTO>();
    private string selectedRole = "0";

    protected override async Task OnInitializedAsync()
    {
        roles = await repository.GetRoles();
    }

    private async Task AssignRole()
    {
        if (selectedRole == "0")
        {
            //await displayMessage.DisplayErrorMessage("You must select a role");
            return;
        }

        await repository.AssignRole(new EditRoleDTO() { RoleName = selectedRole, UserId = UserId });
        //await displayMessage.DisplaySuccessMessage("Role assigned");
    }

    private async Task RemoveRole()
    {
        if (selectedRole == "0")
        {
            //await displayMessage.DisplayErrorMessage("You must select a role");
            return;
        }

        var confirm = await jsRuntime.Confirm($"Confirm delete");

        if (confirm)
        {
            try
            {
                await repository.RemoveRole(new EditRoleDTO() { RoleName = selectedRole, UserId = UserId });
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex.Message);
            }
        }

        //await repository.RemoveRole(new EditRoleDTO() { RoleName = selectedRole, UserId = UserId });
        //await displayMessage.DisplaySuccessMessage("Role removed");
    }

}